{"name":"Flixel-monkey","body":"Flixel For Monkey\r\n=================\r\n\r\nThis is a port of flixel to the [Monkey](http://www.monkeycoder.co.nz/) language.\r\nThe port is translated from [flixel](http://flixel.org/) v2.55 written by Adam 'Atomic' Saltsman.\r\n\r\nRequirements\r\n------------\r\n\r\nMonkey v53 or higher\r\n\r\nInstall\r\n-------\r\n\r\n* For users with git installed:\r\n\t* Go to the Monkey modules directory \r\n\t* Do **git clone git@github.com:devolonter/flixel-monkey.git flixel**\r\n\t* Optionally. Do **git submodule update --init** to get bananas\r\n\t\r\n* For users without git:\r\n\t* Download archive [flixel-monkey-lastest-stable.zip](https://github.com/downloads/devolonter/flixel-monkey/flixel-monkey-lastest-stable.zip) or [flixel-monkey-lastest-stable-full.zip](https://github.com/downloads/devolonter/flixel-monkey/flixel-monkey-lastest-stable-full.zip) (with bananas) from downloads section \r\n\t* Extract archive into the Monkey modules directory\r\n\t\r\nUpgrade to new version\r\n----------------------\r\n\r\n* For users with git installed:\r\n\t* **git pull**\r\n\t* Optionally. Do **git submodule update** to update bananas\r\n\t\r\n* For users without git:\r\n\t* Download the latest version of the library from downloads directory\r\n\t* Replace flixel module content by archive data\r\n\t\r\nNaming conventions\r\n------------------\r\n\r\n* All-caps case (eg: 'ALLCAPS' ): Constants\r\n* Pascal case (eg: 'PascalCase' ): Globals, functions, class, methods, properties\r\n* Camel case (eg: 'camelCase' ): Fields, locals and function parameters\r\n\t\r\nNotes\r\n-----\r\n\r\n* FlxSave currently is not ported\r\n* Debugger is absent\r\n* To build  Windows Phone applications you must add a reference to Microsoft.Phone to the project \r\n\t\r\nDemo\r\n----\r\n\r\n* [Mode Game](http://lab.devolonter.ru/libs/monkey-flixel/mode/html5.html)\r\n* [Invaders Game](http://lab.devolonter.ru/libs/monkey-flixel/flxinvaders/html5.html)\r\n* [Split Screen](http://lab.devolonter.ru/libs/monkey-flixel/splitscreen/html5.html)\r\n* [Path Finding](http://lab.devolonter.ru/libs/monkey-flixel/pathfinding/html5.html) \r\n* [Replay](http://lab.devolonter.ru/libs/monkey-flixel/replay/html5.html) \r\n* [Collisions](http://lab.devolonter.ru/libs/monkey-flixel/collisions/html5.html) \r\n* [Tilemap](http://lab.devolonter.ru/libs/monkey-flixel/tilemap/html5.html) \r\n* [Particles](http://lab.devolonter.ru/libs/monkey-flixel/particles/html5.html)\t\r\n\r\nQuickStart\r\n----------\r\n\r\n```\r\nImport flixel\r\n\r\nFunction Main()\r\n\tNew HelloWorld()\r\n\tReturn 0\r\nEnd Function\r\n\r\n'Main class of the game\r\nClass HelloWorld Extends FlxGame\r\n\t\r\n\tMethod New()\r\n\t\tSuper.New(640, 480, HelloWorldState.ClassObject)\t\r\n\tEnd Method\r\n\t\r\n\t'Optional\r\n\tMethod OnContentInit:Void()\r\n\t\t#Rem\r\n\t\tRegister here all your assets, to use within application\r\n\t\tExample:\r\n\t\tFlxAssetsManager.AddImage(\"ball\", \"graphics/ball.png\")\r\n\t\t\r\n\t\tNow you can load an image in the game this way:\r\n\t\tLocal sprite:FlxSprite = New FlxSprite(0, 0, \"ball\")\r\n\t\t#End\r\n\tEnd Method\r\n\r\nEnd Class\r\n\r\n'Main game state \r\nClass HelloWorldState Extends FlxState\r\n\r\n\t'necessary to the FlxGame constructor, also used to reset game\r\n\tGlobal ClassObject:FlxClass = new HelloWorldStateClass()\r\n\t\r\n\tMethod Create:Void()\t\t\r\n\t\tLocal helloWorld:FlxText = New FlxText(10, 10, 620, \"Hello World!\")\t\r\n\t\thelloWorld.SetFormat(FlxText.SYSTEM_FONT, 16, FlxG.WHITE, FlxText.ALIGN_CENTER)\t\r\n\t\tAdd(helloWorld)\t\t\r\n\tEnd Method\r\n\t\r\n\tMethod Update:Void()\r\n\t\t'put your game logic here\r\n\t\tSuper.Update()\r\n\t\t'... or here\r\n\tEnd Method\r\n\t\r\n\t'If you do not use FlxG.ResetState, FlxG.ReloadReplay, FlxG.RecordReplay, it is optional to override this method.\r\n\tMethod GetClass:FlxCalss()\r\n\t\tReturn ClassObject\r\n\tEnd Method\r\n\t\r\nEnd Class\r\n\r\n'Monkey currently does not support reflection, so here we emulate necessary functional\r\nClass HelloWorldStateClass Implements FlxClass\r\n\r\n\t'Creates new instance of an object\r\n\tMethod CreateInstance:Object()\r\n\t\tReturn New HelloWorldState()\r\n\tEnd Method\r\n\t\r\n\t'checks that the scanned object belongs to a class\r\n\tMethod InstanceOf:Bool(object:Object)\r\n\t\tReturn (HelloWorldState(object) <> Null)\r\n\tEnd Method\r\n\r\nEnd Class\r\n```\r\n\r\nSee more examples in the [bananas](https://github.com/devolonter/flixel-monkey-bananas) folder.","tagline":"This is a port of flixel to the Monkey language","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}